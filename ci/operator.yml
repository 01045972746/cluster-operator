---
resources:
# https://github.com/concourse/git-resource
- name: &repo rabbitmq-for-kubernetes
  type: git
  source:
    uri: git@github.com:pivotal/rabbitmq-for-kubernetes
    branch: master
    private_key: ((git-ssh-key))
# https://github.com/concourse/docker-image-resource
- name: &operator-image rabbitmq-k8s-operator
  type: docker-image
  source:
    # https://github.com/concourse/docker-image-resource/pull/193#issuecomment-402865356
    repository: eu.gcr.io/cf-rabbitmq/rabbitmq-k8s-operator
    username: _json_key
    password: ((gcp-service-account-key))
# https://github.com/concourse/docker-image-resource
- name: &servicebroker-image rabbitmq-k8s-servicebroker
  type: docker-image
  source:
    # https://github.com/concourse/docker-image-resource/pull/193#issuecomment-402865356
    repository: eu.gcr.io/cf-rabbitmq/rabbitmq-k8s-servicebroker
    username: _json_key
    password: ((gcp-service-account-key))

jobs:
- name: test-broker
  plan:
  - get: *repo
    trigger: true
  - task: broker-tests
    tags:
    - k8s
    privileged: true
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          tag: latest
          repository: eu.gcr.io/cf-rabbitmq/rabbitmq-k8s-ci
          username: _json_key
          password: ((gcp-service-account-key))
      caches:
        - path: app_cache
        - path: go_cache
      inputs:
      - name: *repo
        path: /go/src/github.com/pivotal/rabbitmq-for-kubernetes
      params:
        # To use the right value for TERM, check what terms are available in the image: find /lib/terminfo -type f
        # To double-check that a specific term is available, run: infocmp xterm-256color
        TERM: xterm-256color
      run:
        path: sh
        args:
        - -exc
        - |
          set -eu
          export BUILD_PATH=$PWD
          export GOPATH=$BUILD_PATH/go
          export PATH=$PATH:$GOPATH/bin
          cat > git-ssh-key <<EOF
          ((git-ssh-key))
          EOF
          eval $(ssh-agent)
          chmod 600 git-ssh-key
          ssh-add git-ssh-key
          git config --global url."git@github.com:".insteadOf "https://github.com/"
          export GIT_SSH_COMMAND="ssh -o StrictHostKeyChecking=no"
          cd $GOPATH/src/github.com/pivotal/rabbitmq-for-kubernetes
          go get github.com/onsi/ginkgo/ginkgo
          go get github.com/onsi/gomega/...
          # TODO: disabled until we can run kind in Concourse or change the way we run these
          # https://www.pivotaltracker.com/story/show/165383189
          #make broker_tests

- name: build-operator
  serial: true
  plan:
  - get: *repo
    trigger: true
  - task: operator
    tags:
    - k8s
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: golang
          tag: 1.12
      caches:
        - path: app_cache
        - path: go_cache
      inputs:
      - name: *repo
        path: /go/src/github.com/pivotal/rabbitmq-for-kubernetes
      outputs:
      - name: &operator_image_path docker_image_build
      params:
        # To use the right value for TERM, check what terms are available in the image: find /lib/terminfo -type f
        # To double-check that a specific term is available, run: infocmp xterm-256color
        TERM: xterm-256color
      run:
        path: sh
        args:
        - -exc
        - |
          set -eu
          export BUILD_PATH=$PWD
          export APP_CACHE_PATH=$BUILD_PATH/app_cache
          export GO_CACHE_PATH=$BUILD_PATH/go_cache
          export DOCKER_IMAGE_PATH=$BUILD_PATH/docker_image_build
          export GOPATH=$BUILD_PATH/go
          export PATH=$PATH:$GOPATH/bin
          cd $GOPATH/src/github.com/pivotal/rabbitmq-for-kubernetes
          [ -d $APP_CACHE_PATH/bin ] && mv $APP_CACHE_PATH/bin .
          [ -d $APP_CACHE_PATH/vendor ] && mv $APP_CACHE_PATH/vendor .
          [ -d $GO_CACHE_PATH/bin ] && mv $GO_CACHE_PATH/bin $GOPATH
          make operator
          cp -r bin $APP_CACHE_PATH/
          cp -r vendor $APP_CACHE_PATH/
          cp -r $GOPATH/bin $GO_CACHE_PATH/
          cp -r tmp templates Dockerfile $DOCKER_IMAGE_PATH/
  # https://blog.scottlogic.com/2016/06/20/declarative-ci-cd-with-concourse.html
  - put: *operator-image
    params:
      build: *operator_image_path
      tag_file: rabbitmq-for-kubernetes/.git/short_ref
      tag_as_latest: true

- name: build-servicebroker
  serial: true
  plan:
  - get: *repo
    trigger: true
    passed: [test-broker]
  - task: servicebroker
    tags:
    - k8s
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: golang
          tag: 1.12
      caches:
        - path: app_cache
        - path: go_cache
      inputs:
      - name: *repo
        path: /go/src/github.com/pivotal/rabbitmq-for-kubernetes
      outputs:
      - name: &servicebroker_image_path docker_image_build
      params:
        # To use the right value for TERM, check what terms are available in the image: find /lib/terminfo -type f
        # To double-check that a specific term is available, run: infocmp xterm-256color
        TERM: xterm-256color
      run:
        path: sh
        args:
        - -exc
        - |
          set -eu
          export BUILD_PATH=$PWD
          export APP_CACHE_PATH=$BUILD_PATH/app_cache
          export GO_CACHE_PATH=$BUILD_PATH/go_cache
          export DOCKER_IMAGE_PATH=$BUILD_PATH/docker_image_build
          export GOPATH=$BUILD_PATH/go
          export PATH=$PATH:$GOPATH/bin
          cd $GOPATH/src/github.com/pivotal/rabbitmq-for-kubernetes
          [ -d $APP_CACHE_PATH/bin ] && mv $APP_CACHE_PATH/bin .
          [ -d $APP_CACHE_PATH/vendor ] && mv $APP_CACHE_PATH/vendor .
          [ -d $GO_CACHE_PATH/bin ] && mv $GO_CACHE_PATH/bin $GOPATH
          make servicebroker
          cp -r bin $APP_CACHE_PATH/
          cp -r vendor $APP_CACHE_PATH/
          cp -r $GOPATH/bin $GO_CACHE_PATH/
          cp -r tmp/servicebroker servicebroker/config.yaml servicebroker/Dockerfile $DOCKER_IMAGE_PATH/
  # https://blog.scottlogic.com/2016/06/20/declarative-ci-cd-with-concourse.html
  - put: *servicebroker-image
    params:
      build: *servicebroker_image_path
      tag_file: rabbitmq-for-kubernetes/.git/short_ref
      tag_as_latest: true

- name: smoke-tests
  serial: true
  plan:
  - get: *repo
  - get: *operator-image
    passed: [build-operator]
    trigger: true
  - task: run-smoke-tests
    tags:
    - k8s
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          tag: latest
          repository: eu.gcr.io/cf-rabbitmq/rabbitmq-k8s-ci
          username: _json_key
          password: ((gcp-service-account-key))
      inputs:
      - name: *repo
        path: /go/src/github.com/pivotal/rabbitmq-for-kubernetes
      params:
        # To use the right value for TERM, check what terms are available in the image: find /lib/terminfo -type f
        # To double-check that a specific term is available, run: infocmp xterm-256color
        TERM: xterm-256color
      run:
        path: sh
        args:
        - -exc
        - |
          export BUILD_PATH=$PWD
          export GOPATH=$BUILD_PATH/go
          export PATH=$PATH:$GOPATH/bin
          cd $GOPATH/src/github.com/pivotal/rabbitmq-for-kubernetes
          cat > gcp.key <<EOF
          ((gke-cluster-creator-key))
          EOF
          gcloud auth activate-service-account --key-file=gcp.key
          echo "Creating the cluster..."
          gcloud --quiet container clusters create ci-alpha-cluster   --cluster-version=1.13.4-gke.1   --enable-kubernetes-alpha --no-enable-autorepair --no-enable-autoupgrade --enable-ip-alias --no-enable-basic-auth --no-issue-client-certificate --metadata disable-legacy-endpoints=true --machine-type n1-standard-2 --region europe-west1-c
          #gcloud container clusters get-credentials ci-alpha-cluster --zone europe-west1-c --project cf-rabbitmq
          make deploy_ci
          echo "Testing single node cluster..."
          make single_smoke_test
          echo "Testing multi-node cluster..."
          make ha_smoke_test
          echo "Deleting the cluster..."
          gcloud --quiet container clusters delete ci-alpha-cluster --region europe-west1-c
